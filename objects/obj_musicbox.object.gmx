<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_musicbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.misc1 == 0)
{
    global.shineget = 0;
}
else
{
    global.shineget = 1;
}
global.beginningStart = 1;

//Turn off animation speed because sprite changes with timer
image_speed = 0;

//set health drops
minDrops = 3;
maxDrops = 5;

//Set the frame for the time it activates and deactivates
shootBeat = global.quarterSec;    // whole note

hurtSprite = "spr_musicboxhurt";
//Keep note that you need to have damage, destroyable, and absorbed
//variables for every object you make that can damage the player.


hurtSoundOne = snd_silence;
hurtSoundTwo = snd_silence;
//Set the damage it will deal to players
damage = 100;

//set destroyable to zero if you don't want it deleted after touching player
destroyable = 0;

//please have absorbed as a variable for anything that can damage to the player
//just set it to zero
absorbed = 0;


//Set health for enemy
hp = 20;
//Define the knockback and hitstun
bulletKnockback = 20;
shineKnockback = 0;
hitstunTime = 13;

action = 1;

//Do not touch these
upmomentum = 0;
rightmomentum = 0;
leftmomentum = 0;
downmomentum = 0;

moveDirection = 0;

//Do not touch this
sS = sprite_index;
hS = asset_get_index(hurtSprite);


//Set the alarm based on the given beat
shootTimer = shootBeat;
moveBeat = global.quarterSec;    // whole note
moveTimer = moveBeat;

myWall = instance_create(x-22, y-24, obj_wall);
myWall.image_xscale = 0.7;
myWall.image_yscale = 1.5;

if (global.misc1 == 1)
{
    instance_destroy(myWall);
    instance_destroy(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Do not touch
if (sprite_index == hS)
{
    sprite_index = sS;
}
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//You must reset the alarm so it always loops
alarm[0] = activationBeat;

//Make the sprite go to it's next subimage whenever this alarm happens
image_index += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//You must reset the alarm so it always loops

//Look to left or right depending on direction
if (hspeed &gt; 0)
{
    image_xscale = 1;
}
else if (hspeed &lt; 0)
{
    image_xscale = -1;
}


//Smooth movement stopper
if (vspeed &lt; 0.5 &amp;&amp; vspeed &gt; -0.5)
{
    vspeed = 0;
}

if (vspeed &gt; 0)
{
    vspeed -= 0.5;
}

if (vspeed &lt; 0)
{
    vspeed += 0.5;
}

if (hspeed &lt; 0.5 &amp;&amp; hspeed &gt; -0.5)
{
    hspeed = 0;
}

if (hspeed &gt; 0)
{
    hspeed -= 0.5;
}

if (hspeed &lt; 0)
{
    hspeed += 0.5;
}

//Set momentum to zero if they are small enough
if (upmomentum &lt; 0.5)
{
    upmomentum = 0;
}

if (upmomentum &gt; 0)
{
    upmomentum = upmomentum - 0.5;
}


if (leftmomentum &lt; 0.5)
{
    leftmomentum = 0;
}

if (leftmomentum &gt; 0)
{
    leftmomentum = leftmomentum - 0.5;
}


if (rightmomentum &lt; 0.5)
{
    rightmomentum = 0;
}

if (rightmomentum &gt; 0)
{
    rightmomentum = rightmomentum - 0.5;
}


if (downmomentum &lt; 0.5)
{
    downmomentum = 0;
}

if (downmomentum &gt; 0)
{
    downmomentum = downmomentum - 0.5;
}



//Move object based on its current momentum
x -= leftmomentum;
x += rightmomentum;
y += downmomentum;
y -= upmomentum;


//Correct sprite layer ordering
depth = -y;

//Check if enemy is in the state to not perform an action
action = 1;

if (sprite_index == asset_get_index(hurtSprite))
{
    action = 0;
}

//Check if this dude left the screen
if (action == 1 &amp;&amp; (x &lt; view_xview-200 || x &gt; view_xview+1168 || y &lt; view_yview-200 || y &gt; view_yview+732))
{
    action = 0;
    hspeed = 0;
    vspeed = 0
}





shootTimer  -= delta_time / 1000000;

script_execute(scr_resyncenemies_david);

firstBoolCheck = global.chizuruShootRest &lt; global.chizuruShootBeat - global.chizuruShootBeat;
secondBoolCheck = audio_sound_get_track_position(global.musicrm1) mod global.playerQuarter &lt; 0.1 || audio_sound_get_track_position(global.musicrm1) mod global.playerQuarter &gt; 0.4;

if (firstBoolCheck &amp;&amp; secondBoolCheck)
{
    image_index = 1;
}
else
{
    image_index = 0;
}
/*
if (shootTimer &lt;= 0)
{
    shootTimer = shootBeat;
//Make the sprite go to it's next subimage whenever this alarm happens
    image_index += 1;

}
*/
myWall.x = x-15;
myWall.y = y-24;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_musicboxstopper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_explosion);
instance_destroy(myWall);
instance_destroy(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizurufirebullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(other.timed == 1)
{
    audio_stop_sound(snd_correct);
    audio_play_sound_on (global.effectsEmitter, snd_correct, false, 10); 
    script_execute(scr_enemydamage);
}
else
{
    audio_play_sound_on (global.effectsEmitter, snd_ricochet, false, 10); 
    other.direction += 180;
    other.direction += random_range(0, 40);
    other.speed *= 2;
    
    var damageNumber = instance_create(x, y, obj_damagenumber);
    damageNumber.hspeed = random_range(-5, 5);
    damageNumber.vspeed = random_range(-10, -15);
    damageNumber.gravity = 1;
    damageNumber.gravity_direction = 270;
    damageNumber.damage = -900;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruicebullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(other.timed == 1)
{
    audio_stop_sound(snd_correct);
    audio_play_sound_on (global.effectsEmitter, snd_correct, false, 10); 
    script_execute(scr_enemydamage);
}
else
{
    audio_play_sound_on (global.effectsEmitter, snd_ricochet, false, 10); 
    other.direction += 180;
    other.direction += random_range(0, 40);
    other.speed *= 2;
    
    var damageNumber = instance_create(x, y, obj_damagenumber);
    damageNumber.hspeed = random_range(-5, 5);
    damageNumber.vspeed = random_range(-10, -15);
    damageNumber.gravity = 1;
    damageNumber.gravity_direction = 270;
    damageNumber.damage = -900;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruspreadbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(other.timed == 1)
{
    audio_stop_sound(snd_correct);
    audio_play_sound_on (global.effectsEmitter, snd_correct, false, 10); 
    script_execute(scr_enemydamage);
}
else
{
    audio_play_sound_on (global.effectsEmitter, snd_ricochet, false, 10); 
    other.direction += 180;
    other.direction += random_range(0, 40);
    other.speed *= 2;
    
    var damageNumber = instance_create(x, y, obj_damagenumber);
    damageNumber.hspeed = random_range(-5, 5);
    damageNumber.vspeed = random_range(-10, -15);
    damageNumber.gravity = 1;
    damageNumber.gravity_direction = 270;
    damageNumber.damage = -900;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizururapidbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(other.timed == 1)
{
    audio_stop_sound(snd_correct);
    audio_play_sound_on (global.effectsEmitter, snd_correct, false, 10); 
    script_execute(scr_enemydamage);
}
else
{
    audio_play_sound_on (global.effectsEmitter, snd_ricochet, false, 10); 
    other.direction += 180;
    other.direction += random_range(0, 40);
    other.speed *= 2;
    
    var damageNumber = instance_create(x, y, obj_damagenumber);
    damageNumber.hspeed = random_range(-5, 5);
    damageNumber.vspeed = random_range(-10, -15);
    damageNumber.gravity = 1;
    damageNumber.gravity_direction = 270;
    damageNumber.damage = -900;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruenhancedbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(other.timed == 1)
{
    audio_stop_sound(snd_correct);
    audio_play_sound_on (global.effectsEmitter, snd_correct, false, 10); 
    script_execute(scr_enemydamage);
}
else
{
    audio_play_sound_on (global.effectsEmitter, snd_ricochet, false, 10); 
    other.direction += 180;
    other.direction += random_range(0, 40);
    other.speed *= 2;
    
    var damageNumber = instance_create(x, y, obj_damagenumber);
    damageNumber.hspeed = random_range(-5, 5);
    damageNumber.vspeed = random_range(-10, -15);
    damageNumber.gravity = 1;
    damageNumber.gravity_direction = 270;
    damageNumber.damage = -900;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizurubasicbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(other.timed == 1)
{
    audio_stop_sound(snd_correct);
    audio_play_sound_on (global.effectsEmitter, snd_correct, false, 10); 
    script_execute(scr_enemydamage);
}
else
{
    audio_stop_sound(snd_ricochet);
    audio_play_sound_on (global.effectsEmitter, snd_ricochet, false, 10); 
    other.direction += 180;
    other.direction += random_range(0, 40);
    other.speed *= 2;
    
    var damageNumber = instance_create(x, y, obj_damagenumber);
    damageNumber.hspeed = random_range(-5, 5);
    damageNumber.vspeed = random_range(-10, -15);
    damageNumber.gravity = 1;
    damageNumber.gravity_direction = 270;
    damageNumber.damage = -900;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
