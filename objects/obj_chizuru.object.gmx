<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chizurustandd</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mySpeed = 7;
analogBoundary = 0.1;
aimBoundary = 0.01;
isMoving = 1;
isAiming = 1;
lookDirection = 2;

image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x movement
if (global.chizurumovex &gt; analogBoundary || global.chizurumovex &lt; -analogBoundary)
{
    x += global.chizurumovex * mySpeed;
}
//y movement
if (global.chizurumovey &gt; analogBoundary || global.chizurumovey &lt; -analogBoundary)
{
    y += global.chizurumovey * mySpeed;
}

if (abs(global.chizurumovex) &gt; analogBoundary || abs(global.chizurumovey) &gt; analogBoundary)
{
    isMoving = 1;
}
else
{
    isMoving = 0;
}
if (abs(global.chizuruaimx) &gt; aimBoundary || abs(global.chizuruaimy) &gt; aimBoundary)
{
    isAiming = 1;
}
else
{
    isAiming = 0;
}


////////////////////////////
//aim look
////////////////////////////

//right look
if ((global.chizuruaimx &gt; analogBoundary || global.chizuruaimx &lt; -analogBoundary) &amp;&amp; abs(global.chizuruaimx) &gt; abs(global.chizuruaimy))
{
    if (global.chizuruaimx &gt; 0)
    {
        lookDirection = 6;
    }
    else
    {
        lookDirection = 4;
    }
}

//down look
if (global.chizuruaimy &gt; analogBoundary &amp;&amp; global.chizuruaimy &gt; abs(global.chizuruaimx))
{
    lookDirection = 2;
}

//down right look
if (abs(global.chizuruaimx) &gt; 0.4 &amp;&amp; global.chizuruaimy &gt; 0.4)
{
    if (global.chizuruaimx &gt; 0)
    {
        lookDirection = 3;
    }
    else
    {
        lookDirection = 1;
    }
}

//up look
if (global.chizuruaimy &lt; -analogBoundary &amp;&amp; abs(global.chizuruaimy) &gt; abs(global.chizuruaimx))
{
    lookDirection = 8;
}

//up right look
if (abs(global.chizuruaimx) &gt; 0.4 &amp;&amp; global.chizuruaimy &lt; -0.4)
{
    if (global.chizuruaimx &gt; 0)
    {
        lookDirection = 9;
    }
    else
    {
        lookDirection = 7;
    }
}



////////////////////////////
//move look
////////////////////////////


if (isAiming == 0)
{
    //right look
    if ((global.chizurumovex &gt; analogBoundary || global.chizurumovex &lt; -analogBoundary) &amp;&amp; abs(global.chizurumovex) &gt; abs(global.chizurumovey))
    {
        if (global.chizurumovex &gt; 0)
        {
            lookDirection = 6;
        }
        else
        {
            lookDirection = 4;
        }
    }
    
    //down look
    if (global.chizurumovey &gt; analogBoundary &amp;&amp; global.chizurumovey &gt; global.chizurumovex)
    {
        lookDirection = 2;
    }
    
    //down right look
    if (abs(global.chizurumovex) &gt; 0.4 &amp;&amp; global.chizurumovey &gt; 0.4)
    {
        if (global.chizurumovex &gt; 0)
        {
            lookDirection = 3;
        }
        else
        {
            lookDirection = 1;
        }
    }
    
    //up look
    if (global.chizurumovey &lt; -analogBoundary &amp;&amp; abs(global.chizurumovey) &gt; abs(global.chizurumovex))
    {
        lookDirection = 8;
    }
    
    //up right look
    if (abs(global.chizurumovex) &gt; 0.4 &amp;&amp; global.chizurumovey &lt; -0.4)
    {
        if (global.chizurumovex &gt; 0)
        {
            lookDirection = 9;
        }
        else
        {
            lookDirection = 7;
        }
    }
}


////////////////////
//look set
///////////////////
if(lookDirection == 1)
{
    image_xscale = -1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkdr;
    }
    else
    {
        sprite_index = spr_chizurustanddr;
    }
}

if(lookDirection == 2)
{
    image_xscale = 1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkd;
    }
    else
    {
        sprite_index = spr_chizurustandd;
    }
}

if(lookDirection == 3)
{
    image_xscale = 1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkdr;
    }
    else
    {
        sprite_index = spr_chizurustanddr;
    }
}

if (lookDirection == 4)
{
    image_xscale = -1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkr;
    }
    else
    {
        sprite_index = spr_chizurustandr;
    }
}

if (lookDirection == 6)
{
    image_xscale = 1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkr;
    }
    else
    {
        sprite_index = spr_chizurustandr;
    }
}

if (lookDirection == 7)
{
    image_xscale = -1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkur;
    }
    else
    {
        sprite_index = spr_chizurustandur;
    }
}

if (lookDirection == 8)
{
    image_xscale = 1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalku;
    }
    else
    {
        sprite_index = spr_chizurustandu;
    }
}

if (lookDirection == 9)
{
    image_xscale = 1;
    if (isMoving == 1)
    {
        sprite_index = spr_chizuruwalkur;
    }
    else
    {
        sprite_index = spr_chizurustandur;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
