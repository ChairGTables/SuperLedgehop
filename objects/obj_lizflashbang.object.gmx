<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flashbang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friendly = 0;
absorbed = 0;

category = "spread";

image_angle = direction;

//Set health for enemy
hp = 20;

//set animation speed
image_speed = 0.5;

//You must define the hurt sprite as a string
hurtSprite = "spr_grenade_sonii";

//Do not touch this
sS = sprite_index;
hS = asset_get_index(hurtSprite);

//Define the knockback and hitstun
bulletKnockback = 5;
shineKnockback = 7;
hitstunTime = 13;

//Define the beat that sets the alarm events to occur
shootBeat = global.wholeSec + global.halfSec;    // whole note
moveBeat = global.wholeSec; // half note

//Use these to shoot x amount of times before the enemy shoots again
shotCount = 0;
shotsBeforeRest = 0;
shootRestTime = 150;
action = 1;

counter = 0;

//Do not touch these
upmomentum = 0;
rightmomentum = 0;
leftmomentum = 0;
downmomentum = 0;

//Begin the alarms based on the beats
alarm[0] = 15;
shootTimer = shootBeat;
//alarm[1] = moveBeat;
moveTimer = moveBeat;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 0;
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//////////////////////////
// Core-functionalities
// Do not touch these
// Scroll all the way down for changeable features
/////////////////////////

//script_execute(scr_enemycorestep);

////////////////////////////
//Add additional step features here
////////////////////////////

//Spin animation for spinning enemies (comment this out if non-spinner)
image_angle += 40;


shootTimer -= delta_time / 1000000;
moveTimer -= delta_time / 1000000;


if (shootTimer &lt;= 0)
{
    
    hp = 0;

}
// ======================================================

if (moveTimer &lt;= 0 &amp;&amp; hp != 0)
{
    // ++++++++++++++ MOVING ++++++++++++++++++++++++++++
    //Always set the timer again so it loops
    moveTimer = global.quarterSec;
    audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
    instance_create(x, y, obj_redcircle);
    
}

//++++++++++++++++++++++++++++++++++++++++++++++++++


/////////////////////////////
//Death
/////////////////////////
if( hp &lt; 1 )
{
    audio_play_sound_on (global.effectsEmitter, snd_crashed, false, 10); 
    instance_create(x, y, obj_whitefadein);
    instance_create(x, y, obj_lizflashbangblindness);
    instance_destroy(self);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 0;
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_circleeraser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_smallcircle);
instance_destroy(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
