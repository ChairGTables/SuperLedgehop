<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yellowbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkingSpeed = 3;
hp = 100;

checkLeft = 0;
checkRight = 0;
checkUp = 0;
checkDown = 0;

previousX = 0;
previousY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x -= (x - previousX)/3;
y -= (y - previousY)/3;
alarm[7] = 2;
instance_create(x, y, obj_redcircle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (window_has_focus() &amp;&amp; !instance_exists(obj_dialogue)) {
    display_mouse_lock(window_get_x(), window_get_y(), window_get_width(), window_get_height());
} else display_mouse_unlock();

//Player Movement
hspeed = walkingSpeed * (keyboard_check(ord('D')) - keyboard_check(ord('A')));
vspeed = walkingSpeed * (keyboard_check(ord('S')) - keyboard_check(ord('W')));


if (!place_meeting(x, y, obj_wall))
{
    previousX = x;
    previousY = y;
    alarm[7] = 2;
}

//Collisions
if (hspeed != 0)
{
    if (place_meeting(x + hspeed, y, obj_wall))
    {
        if (hspeed &gt; 0)
        {
            move_contact_all(0, hspeed);
            checkRight = 1;
        }    
        
        if (hspeed &lt; 0)
        {
            move_contact_all(180, -hspeed);
            checkLeft = 1;
        }
        hspeed = 0;
    }
    else if (place_meeting(x + hspeed/2, y, obj_wall))
    {
        if (hspeed &gt; 0)
        {
            move_contact_all(0, hspeed/2);
            checkRight = 1;
        }    
        else
        {
            checkRight = 0;
        }
        
        if (hspeed &lt; 0)
        {
            move_contact_all(180, -hspeed/2);
            checkLeft = 1;
        }
        else
        {
            checkLeft = 0;
        }
        hspeed = 0;
    }
    else
    {
        checkRight = 0;
        checkLeft = 0;
    }
}

if (vspeed != 0)
{
    if (place_meeting(x, y + vspeed, obj_wall))
    {
        if (vspeed &gt; 0)
        {
            move_contact_all(270, vspeed);
            checkDown = 1;
        }
        if (vspeed &lt; 0)
        {
            move_contact_all(90, -vspeed);
            checkUp = 1;
        }
        vspeed = 0;
    }
    else if (place_meeting(x, y + (vspeed/2), obj_wall))
    {
        if (vspeed &gt; 0)
        {
            move_contact_all(270, vspeed);
            checkDown = 1;
        } 
        if (vspeed &lt; 0)
        {
            move_contact_all(90, -vspeed);
            checkUp = 1;
        }
        vspeed = 0;
    }
    else
    {
        checkUp = 0;
        checkDown = 0;
    }
}


//Player Death
image_alpha = hp/100;
if (hp &lt;= 0)
{
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkingSpeed -= 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkingSpeed += 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_text(x + 20, y, checkRight);
draw_text(x - 20, y, checkLeft);
draw_text(x, y + 20, checkDown);
draw_text(x, y - 20, checkUp);

myString = "Walking Speed: " + string(walkingSpeed);

draw_text(view_xview + 10, view_yview + 10, myString);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_title);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
