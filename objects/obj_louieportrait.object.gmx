<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_louieportrait</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.isCutscene = true;

image_speed = 0;

xDraw = 0;
xSpeed = -30;

state = 0;

sillhouteScale = 1;
sillhouteAlpha = 1;

eyeshineScale = 1;
eyeshineAlpha = 1;
eyeshineAngle = 1;

instance_create(x, y, obj_blacktransparentbackground);

switch (global.language)
{
case 4:
message1 = "Le héros est arrivé.";
message2 = "Cependant, il n´est pas là pour te sauver.";
message3 = "Parce que c'est TOI le criminel.";
break;

case 3:
message1 = "O herói chegou.";
message2 = "Porém, ele não está aqui para te salvar.";
message3 = "Porque o criminoso é VOCÊ.";
break;

case 2:
message1 = "ヒーローが到着しました！";
message2 = "ただし、あなたを助けに来た訳ではありません。";
message3 = "なぜなら あ な た も犯罪者だからです。";
break;

case 1:
message1 = "¡El heroe llego para ayudar!";
message2 = "Pero no esta aqui para ayudarte.";
message3 = "El esta aqui por las personas que lloraban de dolor...
¡Dolor causado por TI!";
break;

default:
message1 = "The hero has arrived.";
message2 = "However, it is not you who will be saved by him.";
message3 = "That is because YOU are the criminal.";

}
scroll = 0;
text1 = "";
text2 = "";
text3 = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (state == 5)
{
    state = 6;
    instance_create(x, y, obj_whitefadeout);
}

if (state == 4)
{
    scroll = 0;
    state = 5;
    image_speed = 0.2;
    alarm[0] = 90;
}

if (state == 3)
{
    scroll = 0;
    state = 4;
    alarm[0] = 90;
}

if (state == 2)
{
    scroll = 0;
    state = 3;
    alarm[0] = 90;
}

if (state == 1)
{
    scroll = 0;
    state = 2;
    alarm[0] = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (xSpeed &lt; 0 &amp;&amp; state == 0)
{
    xDraw += xSpeed;
    xSpeed += 1;
    
}

if (xSpeed &gt;= 0 &amp;&amp; state == 0)
{
    state = 1;
    alarm[0] = 60;
}

if (sillhouteAlpha &gt; 0 &amp;&amp; sillhouteAlpha &lt; 1)
{
    sillhouteAlpha -= 0.05;
    sillhouteScale += 0.05;
}

if (eyeshineAlpha &gt; 0 &amp;&amp; eyeshineAlpha &lt; 1)
{
    eyeshineAlpha -= 0.05;
    eyeshineScale += 0.05;
    eyeShineAngle += 12;
}

if (state == 2)
{
    scroll += 1;
    text1 = string_copy(message1, 1, scroll);
}

if (state == 3)
{
    scroll += 1;
    text2 = string_copy(message2, 1, scroll);
}

if (state == 4)
{
    scroll += 1;
    text3 = string_copy(message3, 1, scroll);
}

if (state == 6)
{
    if (audio_sound_get_track_position(global.musicrm1) &gt; audio_sound_length(global.musicrm1) - 0.05|| (!audio_is_playing(snd_louieintro)))
    {
        global.isCutscene = false;
        room_goto_next();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 3;

sillhouteAlpha = 0.9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sillhouteAlpha &lt; 1)
{
    draw_sprite_ext(sprite_index, image_index, view_xview + view_wview + 283 + xDraw, view_yview + view_hview - 242, sillhouteScale, sillhouteScale, image_angle, c_white, sillhouteAlpha);
}
draw_sprite(sprite_index, image_index, view_xview + view_wview + 283 + xDraw, view_yview + view_hview - 242);

if (image_index != 3 &amp;&amp; instance_exists(obj_blacktransparentbackground))
{
    draw_sprite_ext(spr_bigblack, 0, view_xview + (view_wview/2), view_yview + (view_hview/2), 1, 1, 0, c_white, obj_blacktransparentbackground.image_alpha);
}

if (eyeshineAlpha &lt; 1)
{
    draw_sprite_ext(spr_eyeshine, image_index, view_xview + view_wview + 283 + xDraw, view_yview + view_hview - 242 - 120, eyeshineScale, eyeshineScale, eyeshineAngle, c_white, eyeshineAlpha);
}
        draw_set_color(16645629);
        draw_set_valign(fa_top);
        draw_set_halign(fa_left);

        if (global.language == 2 || global.language == 4)
        {
            draw_set_font(fnt_talkjapanese);
        }
        else if (global.language == 1 || global.language == 3)
        {
            draw_set_font(fnt_talkforeign);
        }
        else
        {
            draw_set_font(fnt_talkdefault);
        }

draw_text(view_xview+20, view_yview + 200, text1);
draw_text(view_xview+20, view_yview + 240, text2);
draw_text(view_xview+20, view_yview + 280, text3);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
