<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_louiewalk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_survivaltheme);

if (instance_exists(obj_chizuru))
{
    if (global.xHolder[0] != 0 &amp;&amp; global.yHolder[0] != 0)
    {
        obj_chizuru.x = global.xHolder[0];
        obj_chizuru.y = global.yHolder[0];
    }
}

global.shineget = 1;

//Set health for enemy
hp = 100;

equip = "spread";

safeX = 0;
safeY = 0;

global.bossone = 434;
global.bosstwo = 434;
global.bossthree = 100;

hpIndex = 3;

//set health drops
minDrops = 3;
maxDrops = 5;

//set animation speed
image_speed = 0.3;

//You must define the hurt sprite as a string
hurtSprite = "spr_louiehurt";

//Do not touch this
sS = sprite_index;
hS = asset_get_index(hurtSprite);

//Set hurt sounds
hurtSoundOne = snd_louiehurt1;
hurtSoundTwo = snd_louiehurt2;
deathSound = snd_louiedeath;


//Define the knockback and hitstun
bulletKnockback = 5;
shineKnockback = 7;
hitstunTime = 13;

//Define the beat that sets the alarm events to occur
shootBeat = global.eighthSec / 4;    // whole note
moveBeat = global.quarterSec; // half note

shootRestBeat = global.wholeSec * 4;

currentAngle = -10;

//Use these to shoot x amount of times before the enemy shoots again
shotCount = 0;
shotsBeforeRest = 30;
shootRestTime = 0;
action = 1;

//Boss values
phase = 0;
warn[0] = instance_create(-300, -300, obj_warnbox);
warn[1] = instance_create(-300, -300, obj_warnbox);
warn[2] = instance_create(-300, -300, obj_warnbox);
warn[3] = instance_create(-300, -300, obj_warnbox);
alarm[1] = 2;
startX = x;
startY = y;
directionHold = 0;
 

//Do not touch these
upmomentum = 0;
rightmomentum = 0;
leftmomentum = 0;
downmomentum = 0;

//Begin the alarms based on the beats
//alarm[0] = shootBeat;
shootTimer = shootBeat;
//alarm[1] = moveBeat;
moveTimer = moveBeat;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Do not touch
if (sprite_index == hS)
{
    sprite_index = sS;
}
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_enemymoveback);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//////////////////////////
// Core-functionalities
// Do not touch these
// Scroll all the way down for changeable features
/////////////////////////

global.chizurump = 0;

script_execute(scr_enemycorestep);

if (global.bosstwo &gt; 0 &amp;&amp; global.bossthree &gt; 0 &amp;&amp; global.bossone &gt; 0)
{
    global.bossthree = hp;
}

if (global.bosstwo &gt; 0 &amp;&amp; global.bossthree &lt; 1 &amp;&amp; global.bossone &gt; 0)
{
    if(hpIndex == 3)
    {
        hp = global.bosstwo;
        hpIndex = 2;
    }
    global.bosstwo = hp;
}

if (global.bosstwo &lt; 1 &amp;&amp; global.bossthree &lt; 1 &amp;&amp; global.bossone &gt; 0)
{
    if(hpIndex == 2)
    {
        hp = global.bossone;
        hpIndex = 1;
    }
    global.bossone = hp;
}


////////////////////////////
//Add additional step features here
////////////////////////////

//Spin animation for spinning enemies (comment this out if non-spinner)
//image_angle += 5;


shootTimer -= delta_time / 1000000;
moveTimer  -= delta_time / 1000000;
shootRestTime -= delta_time/100000;
        

script_execute(scr_resyncenemies_david);

if (global.resyncing)
{
    shootRestTime = global.currentWholeSec * 4;
}

if (shotCount &gt; 49 &amp;&amp; shotCount &lt; 55)
{
    audio_play_sound_on (global.effectsEmitter, snd_enemymedium, false, 10); 
    for (i = 0; i &lt; 200; i += 180)
    {
        bullet = instance_create(x, y, obj_enemyenhancedbullet);
        bullet.speed = 10;        
        bullet.direction = directionHold + i;
        directionHold += 3;    
    }

}

if (shotCount == 60 || shotCount == 61)
{
    audio_play_sound_on (global.effectsEmitter, snd_enemymedium, false, 10); 
    for (i = 0; i &lt; 2 ; i++)
    {
        bullet = instance_create(x, y, obj_enemyenhancedbullet);
        bullet.speed = random_range(14, 17);
        bullet.image_xscale = 2;
        bullet.image_yscale = 2;
        if (instance_exists(obj_chizuru))
        {
            bullet.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + random_range(10, 30);
        }
    }
    
    for (i = 0; i &lt; 2 ; i++)
    {
        bullet = instance_create(x, y, obj_enemyenhancedbullet);
        bullet.speed = random_range(14, 17);
        bullet.image_xscale = 2;
        bullet.image_yscale = 2;
        if (instance_exists(obj_chizuru))
        {
            bullet.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) - random_range(10, 30);
        }
    }
    
    if (random_range(0,100) &gt; 95)
    {
        bullet = instance_create(x, y, obj_enemyenhancedbullet);
        bullet.speed = random_range(4, 7);
        bullet.image_xscale = 2;
        bullet.image_yscale = 2;
        if (instance_exists(obj_chizuru))
        {
            bullet.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + random_range(-3, 3);
        }
    }
}

if (shotCount == 64 &amp;&amp; !instance_exists(obj_blackbackground))
{
    for (i = 0; i &lt; 3; i++)
    {
        //audio_play_sound_on (global.effectsEmitter, snd_enemysmall, false, 10); 
        bullet = instance_create(x, y, obj_spread_sonii);
        bullet.speed = 0;
        bullet.direction = random_range(0, 360);
        bullet.targetSpeed = random_range(4,9);
        bullet.image_xscale = 2;
        bullet.image_yscale = 2;
    }
}

if (shootTimer &lt;= 0)
{
    //done only if shootresttime &lt;= 0
    
    if( shootRestTime &lt;= 0 )
    {
    // ======== SHOOTING ====================
    //Reset timer
    shootTimer = shootBeat;
    
    //Perform shooting
        if (1 == 1)
        {
            
            if (phase &lt; 3)
            {
                if (shotCount == 0)
                {
                    sprite_index = spr_louieshoot;
                    image_index = 0;
                    image_speed = 0;
                    audio_play_sound_on (global.effectsEmitter, snd_defaultwarn, false, 10); 
                    if (random_range(0, 100) &gt; 50)
                    {
                        audio_play_sound_on (global.voiceEmitter, snd_louieready1, false, 10); 
                    }
                    else
                    {
                        audio_play_sound_on (global.voiceEmitter, snd_louieready2, false, 10); 
                    }
                    if (instance_exists(obj_chizuru))
                    {
                        for (i = 0; i &lt; 2; i++)
                        {
                            slash = instance_create(obj_chizuru.x, obj_chizuru.y, obj_louieslash);
                            warn = instance_create(obj_chizuru.x, obj_chizuru.y, obj_warnbox);
                            warn.sprite_index = spr_warnboxcenter;
                            warn.image_xscale = 100;
                            warn.alarm[0] = -1;
                            warn.alarm[1] = -1;
                            warn.fading = 1;
                            if (random_range(0, 100) &gt; 50)
                            {
                                slash.direction = 45;
                                warn.image_angle = 45;
                            }
                            else
                            {
                                slash.direction = 135;
                                warn.image_angle = 135;
                            }
                            
                            if (random_range(0, 100) &gt; 50)
                            {
                                slash.direction += 180;
                                warn.image_angle += 180;
                            }
                            
                            slash.speed = 20;
                        
                        }
                        
                        if (random_range(0, 100) &gt; 50)
                        {
                            slash.direction += 45;
                            warn.image_angle += 45;
                        }
                        else
                        {
                            slash.direction -= 45;
                            warn.image_angle  -= 45;
                        }
                        
                    }
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    shotCount += 1;
                    
                }
                else if (shotCount == 1)
                {
                    image_speed = 0.7;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    shotCount = 2;
                    speed = 0;
                    
                }
                else if (shotCount == 2)
                {   
                    shotCount = 0;
                    shootBeat = global.wholeSec;
                    shootTimer = shootBeat;
                    shootRestTime = shootRestBeat;
                    phase += 1;
                }
            }
            else
            {
                if (shotCount == 0)
                {
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    if (random_range(0, 100) &gt; 67)
                    {
                        shotCount = 70;
                        sprite_index = spr_louieshoot;
                        image_index = 0;
                        image_speed = 0.3;
                        
                        if (random_range(0, 100) &gt; 100)
                        {
                            audio_play_sound_on (global.voiceEmitter, snd_louiestaydown1, false, 10); 
                        }
                        else
                        {
                            audio_play_sound_on (global.voiceEmitter, snd_louiestaydown2, false, 10); 
                        }
                        
                        for (i = 1; i &lt; 6; i++)
                        {
                            disc = instance_create(x, y, obj_louiedisc);
                            if (instance_exists(obj_chizuru))
                            {
                                disc.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + 90;
                            }
                            disc.speed = (i * 2) + 3; 
                            
                            disc = instance_create(x, y, obj_louiedisc);
                            if (instance_exists(obj_chizuru))
                            {
                                disc.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) - 90;
                            }
                            disc.speed = (i * 2) + 3; 
                        }
                        
                        shootBeat = global.wholeSec * 2;
                        shootTimer = shootBeat;
                        
                    }
                    else if (random_range(0, 100) &lt; 33)
                    {
                        audio_play_sound_on (global.voiceEmitter, snd_louienomore, false, 10); 
                        shotCount = 60;
                        sprite_index = spr_louieshoot;
                        image_index = 1;
                        image_speed = 0;
                        shootBeat = global.wholeSec;
                        shootTimer = shootBeat;
                    }
                    else
                    {
                        shotCount = 50;    
                        audio_play_sound_on (global.voiceEmitter, snd_louiegrowl, false, 10); 
                        sprite_index = spr_louieshoot;
                        image_index = 1;
                        image_speed = 0.7;
                        if (instance_exists(obj_chizuru))
                        {
                            directionHold = point_direction(x, y, obj_chizuru.x, obj_chizuru.y);
                        }
                    }
                    
                }
                else if (shotCount == 50 || shotCount == 51 || shotCount == 52 || shotCount == 53 || shotCount == 54)
                {
                    
                    audio_play_sound_on (global.effectsEmitter, snd_waveblast, false, 10); 
                    for (i = 0; i &lt; 360; i += 20)
                    {
                        bullet = instance_create(x, y, obj_spread_sonii);
                        bullet.image_xscale = 3;
                        bullet.image_yscale = 3;
                        bullet.direction = i;
                        bullet.speed = 6;
                    }
                    if (shotCount &lt; 54)
                    {
                        shotCount += 1;
                        shootBeat = global.halfSec;
                        shootTimer = shootBeat;
                    }
                    else
                    {
                        shotCount = 0;
                        phase = 0;
                        shootBeat = global.wholeSec;
                        shootTimer = shootBeat;
                    }
                }
                else if (shotCount == 60)
                {
                    audio_play_sound_on (global.effectsEmitter, snd_defaultwarn, false, 10); 
                    warn = instance_create(x, y, obj_warninglaser_sonii);
                    if (instance_exists(obj_chizuru))
                    {
                        directionHold = point_direction(x, y, obj_chizuru.x, obj_chizuru.y);
                        warn.image_angle = directionHold;
                    }
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 61)
                {
                    audio_play_sound_on (global.effectsEmitter, snd_throw, false, 10); 
                    spear = instance_create(x, y, obj_louiespear);
                    spear.direction = directionHold;
                    spear.speed = 45;
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 62)
                {
                    audio_play_sound_on (global.voiceEmitter, snd_louiebull, false, 10);
                    if (!instance_exists(obj_blackbackground))
                    {
                        audio_play_sound_on (global.effectsEmitter, snd_defaultwarn, false, 10); 
                        
                        warn = instance_create(x, y, obj_warninglaser_sonii);
                        warn.image_angle = directionHold;
                        warn.image_yscale = 8;
                    }
                    
                    shotCount += 1;
                    shootBeat = global.halfSec + global.quarterSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 63)
                {
                    image_index = 2;
                    audio_play_sound_on (global.effectsEmitter, snd_crashed, false, 10); 
                    spark = instance_create(x, y, obj_laser_sonii);
                    spark.sprite_index = spr_masterspark;
                    if (instance_exists(obj_blackbackground) &amp;&amp; instance_exists(obj_chizuru) )
                    {
                        spark.image_angle = point_direction(x, y, obj_chizuru.x, obj_chizuru.y);    
                    }
                    else
                    {
                        spark.image_angle = directionHold;
                    }
                    spark.image_xscale = 1;
                    
                    if (instance_exists(obj_camera_chair))
                    {
                        obj_camera_chair.intensity = 30;
                    }
                    
                    spark.damage = 9000;
                    spark.fading = 0;
                    spark.alarm[1] = 90;
                    spark.frequency = 0.7;
                    spark.amplitude = 0.09;
                    spark.depth = depth - 1;
                    if (instance_exists(obj_blackbackground))
                    {
                        shotCount = 65;
                    }
                    else
                    {
                        shotCount += 1;
                    }
                    shootBeat = global.wholeSec * 2;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 64)
                {
                    image_speed = 0.7;
                    shotCount = 0;
                    phase = 0;
                    shootBeat = global.wholeSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 70)
                {
                    shotCount = 0;
                    phase = 0;
                    shootBeat = global.wholeSec;
                    shootTimer = shootBeat;
                }
            }
        }
    
        
    
    }
    
}
// ======================================================

if (moveTimer &lt;= 0)
{
    // ++++++++++++++ MOVING ++++++++++++++++++++++++++++
    //Always set the timer again so it loops
    moveTimer = moveBeat;
    
    //Action is checked on the step state to see if enemy is hurt or enemy is offscreen
    if(action == 1 &amp;&amp; ( (shotCount &gt; 49 &amp;&amp; shotCount &lt; 55)  || shotCount == 0))
    {
        //Touch these to modify movement
        followspeed = 7;
        minimumspeed = 6;
        maximumspeed = 9;
        
        //Do not touch these
        if (random_range(0, 100) &gt; 50 &amp;&amp; instance_exists(obj_chizuru))
        {
            move_towards_point(obj_chizuru.x, obj_chizuru.y, followspeed);
        }
        else
        {
            hspeed = random_range(minimumspeed, maximumspeed);
            vspeed = random_range(minimumspeed, maximumspeed);
            if (random_range(0, 100) &gt; 50)
            {
                hspeed = -hspeed;
            }
            if (random_range(0, 100) &gt; 50)
            {
                vspeed = -vspeed;
            }
        }
    }
}

script_execute(scr_truespeedwallcheck);
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++


/////////////////////////////
//Death
/////////////////////////
if (hp &lt; 1 &amp;&amp; global.bossone &lt; 1 &amp;&amp; global.bosstwo &lt; 1 &amp;&amp; global.bossthree &lt; 1)
{
    script_execute(scr_stopmusic);
    audio_play_sound_on (global.voiceEmitter, deathSound, false, 10); 
    var death = instance_create(x, y, obj_bossdeath);
    death.sprite_index = spr_louiehurt;
    
    if (!steam_get_achievement("BOSS6"))
    {
        steam_set_achievement("BOSS6");
    }
    
    instance_destroy(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_defaultdetonator">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.phase == 4 &amp;&amp; shotCount == 200)
{
    shotCount = 0;
    phase = 0;
    shootBeat = global.quarterSec;
    shootTimer = shootBeat;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 103)
{
    if (instance_exists(obj_warnbox))
    {
        instance_destroy(obj_warnbox);
    }
    x = startX;
    y = startY;
    shotCount = 0;
    phase = 0;
    shootBeat = global.wholeSec * 2;
    shootTimer = shootBeat;
    audio_play_sound_on (global.effectsEmitter, snd_defaultdash, false, 10); 
}


//Do not touch!
myNum = 7;

if (vspeed &lt; 0)
{
    y += myNum;
}
if (vspeed &gt; 0)
{
    y -=  myNum;
}
if (hspeed &lt; 0)
{
    x += myNum;
}
if (hspeed &gt; 0)
{
    x -= myNum;
}


if (upmomentum &gt; 0)
{
    y += myNum;
}
if (downmomentum &gt; 0)
{
    y -= myNum;
}
if (leftmomentum &gt; 0)
{
    x += myNum;
}
if (rightmomentum &gt; 0)
{
    x -= myNum;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shine">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.hitbox == 1)
{
    script_execute(scr_enemydamage);
    script_execute(scr_enemyshined);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruflame">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount &gt; 0)
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruicebullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount &gt; 0)
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruspreadbullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount &gt; 0)
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizururapidbullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount &gt; 0)
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruenhancedbullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount &gt; 0)
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizurubasicbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount &gt; 0)
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuru">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_louieshoot)
{
    sprite_index = spr_louiewalk;
    image_speed = 0.3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
