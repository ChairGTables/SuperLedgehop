<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_stopmusic);
// Music in rm1, priority 10, looping
global.volumeHold = global.musicVolume;
global.musicVolume += 0.2;
audio_emitter_gain(global.musicEmitter,   global.musicVolume);
global.musicrm1 = audio_play_sound_on (global.musicEmitter, snd_survivaltheme, true, 10);

spawned = 0;
maxSpawn = 1;
currentTypes = 1;
global.remaining = 0;

types[0] = obj_basicenemy2_sonii;
types[1] = obj_basicenemy3_sonii;
types[2] = obj_spreadmove_sonii;
types[3] = obj_charger_sonii;
types[4] = obj_spreadcannon_sonii;
types[5] = obj_cannonaim_sonii;
types[6] = obj_shooterdude_david;
types[7] = obj_grenaider_sonii;
types[8] = obj_policerapid;
types[9] = obj_policecyborg;
types[10] = obj_boombox_sonii;
types[11] = obj_squaremover_sonii;

global.chizuruhp = 99;
global.chizurump = 0;

//Set the frame for the time it activates and deactivates
activateBeat = global.quarterSec;    // whole note


//Keep note that you need to have damage, destroyable, and absorbed
//variables for every object you make that can damage the player.


//Set the damage it will deal to players
damage = 100;

//set destroyable to zero if you don't want it deleted after touching player
destroyable = 0;

//please have absorbed as a variable for anything that can damage to the player
//just set it to zero
absorbed = 0;


//Set the alarm based on the given beat
activateTimer = activateBeat;



global.shineget = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//You must reset the alarm so it always loops
activateTimer  -= delta_time / 1000000;

global.chizurump = 0;

if (global.resyncing)
{
    activateTimer = global.currentQuarterSec;
}

//set global.destroyed to &gt; 99 for the default kill 100 enemies
if (global.destroyed &gt; 99 &amp;&amp; !instance_exists(obj_louienpc1))
{
    instance_create(room_width / 2, 0, obj_louienpc1);
}


if (activateTimer &lt;= 0)
{
    activateTimer = activateBeat;
    
    if (global.remaining &lt; maxSpawn &amp;&amp; !instance_exists(obj_louienpc1))
    {
        myRandom = 0;
        for (i = 0; i &lt; random_range(2, 4); i++)
        {
            myRandom = random_range(0, 100);
        }
        
        xLeft = max(528, view_xview+50);
        xRight = min(1888, view_xview+900);
        yAnswer = min(1104, max(700, view_yview+(random_range(0, 400) ) ) );
        
        if (place_meeting(xLeft, yAnswer, obj_wall))
        {
            xLeft += 60;
            yAnswer += 60;
        }
        if (place_meeting(xRight, yAnswer, obj_wall))
        {
            xRight -= 60;
            yAnswer += 60;
        }
        
        if (xLeft &gt; 704 &amp;&amp; xLeft &lt; 784)
        {
            xLeft = 784;
        }
        
        if (xRight &gt; 1552 &amp;&amp; xRight &lt; 1648)
        {
            xRight = 1552;
        } 
        
        if (yAnswer &gt; 1164)
        {
            yAnswer = 1164;
        }
        
        if (yAnswer &gt; 912 &amp;&amp; yAnswer &lt; 1024)
        {
            yAnswer = 905;
        }
        
        if (myRandom &gt; 50)
        {
            instance_create(xLeft, yAnswer, types[random_range(0, currentTypes)] );
        }
        else
        {
            instance_create(xRight, yAnswer, types[random_range(0, currentTypes)] );
        }
        
        spawned += 1;
        global.remaining += 1;
    }

}



if(spawned == 3)
{
    maxSpawn = 2;
    currentTypes = 2;
}
if (spawned = 6)
{
    maxSpawn = 3;
    currentTypes = 3;
}
if (spawned == 10)
{
    maxSpawn = 4;
    currentTypes = 4;
}
if (spawned == 15)
{
    maxSpawn = 5;
    currentTypes = 5;
}
if (spawned == 20)
{
    currentTypes = 6;
}
if (spawned == 30)
{
    currentTypes = 7;
}
if (spawned == 40)
{
    currentTypes = 8;
}
if (spawned == 50)
{
    currentTypes = 9;
}
if (spawned == 65)
{
    currentTypes = 10;
}
if (spawned == 80)
{
    maxSpawn = 6;
    currentTypes = 11;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>killCount = 100 - global.destroyed;

draw_set_valign(fa_top);
draw_set_halign(fa_right);
if (!instance_exists(obj_louienpc1))
{
    switch (global.language)
    {
        case 2:
        draw_set_color(c_black);
        draw_set_alpha(0.5);
        draw_rectangle(view_xview+670, view_yview+499, view_xview+960, view_yview+540, 0);
        draw_set_alpha(1);
        draw_set_font(fnt_talkjapanese);
        draw_text_color(view_xview+ 950,view_yview + 510, "ヒーロー到着までの敵数 " + string(killCount),c_white,c_white,c_white,c_white,1);
        break;
    
        case 1:
        draw_set_color(c_black);
        draw_set_alpha(0.5);
        draw_rectangle(view_xview+650, view_yview+499, view_xview+960, view_yview+540, 0);
        draw_set_alpha(1);
        draw_set_font(fnt_talkforeign);
        draw_text_color(view_xview+ 950,view_yview + 510, "Enemigos antes del Heroe: " + string(killCount),c_white,c_white,c_white,c_white,1);
        break;
        
        
        default:
        draw_set_color(c_black);
        draw_set_alpha(0.5);
        draw_rectangle(view_xview+570, view_yview+499, view_xview+960, view_yview+540, 0);
        draw_set_alpha(1);
        draw_set_font(fnt_talkdefault);
        draw_text_color(view_xview+ 950,view_yview + 510, "Enemies until hero arrives: " + string(killCount),c_white,c_white,c_white,c_white,1);
    }
}
draw_set_valign(fa_top);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
