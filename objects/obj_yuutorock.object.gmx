<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yuutorock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bounce = 0;
rotationSpeed = 2;
astral = 0;
alarm[0] = 15;
alarm[1] = 2;
shootAngle = 0;
previousX = x;
previousY = y;
withinRange = true;

if (instance_exists(obj_yuutoboss))
{
    speed = 7;
    direction = point_direction(x, y, obj_yuutoboss.x, obj_yuutoboss.y);
}

if (instance_exists(obj_yuutoassist))
{
    speed = 7;
    direction = point_direction(x, y, obj_yuutoassist.x, obj_yuutoassist.y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>astral = 0;
audio_play_sound_on (global.effectsEmitter, snd_ricebullet, false, 10); 
for (i = 0; i &lt; 360; i += 20)
{
    shot = instance_create(x, y, obj_chizuruspreadbullet);
    shot.direction = i;
    shot.speed = 7;
}

if (instance_exists(obj_yuutoassist) &amp;&amp; astral == 0)
{
    speed = 10;
    direction = point_direction(x, y, obj_yuutoassist.x, obj_yuutoassist.y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shadow = instance_create(x, y, obj_yuutosillhoute);
shadow.direction = direction + 180;
shadow.speed = 1;
alarm[1] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_yuutorock</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 8;
if (instance_exists(obj_yuutoboss) &amp;&amp; bounce == 0 &amp;&amp; rotationSpeed == 2)
{
    speed = 10;
    direction = point_direction(x, y, obj_yuutoboss.x, obj_yuutoboss.y);
    
}

if (instance_exists(obj_yuutoassist) &amp;&amp; astral == 0)
{
    speed = 10;
    direction = point_direction(x, y, obj_yuutoassist.x, obj_yuutoassist.y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>previousX = x;
previousY = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += rotationSpeed;

if (rotationSpeed &gt; 2)
{
    rotationSpeed += 1;
    speed += 0.5;
    direction = image_angle;
    
    shot = instance_create(x, y, obj_spread_sonii);
    shot.speed = 7;
    shot.direction = shotAngle;
    
    shot2 = instance_create(x, y, obj_spread_sonii);
    shot2.speed = 7;
    shot2.direction = shotAngle + 180;
    
    shotAngle += 3;    
    if (rotationSpeed &gt; 60)
    {
        rotationSpeed = 2;
        speed = 15;
    }
}
else
{
    shotAngle = image_angle;
}

visible = true;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bounce &gt; 0)
{
    if (bounce &lt; 5)
    {
        bounce += 1;
        speed = 30;
        if (instance_exists(obj_chizuru))
        {
            direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y);
        }
        anglePerShot = 20;
        for (i = 0; i &lt; 360 / anglePerShot; i++)
        {
            for (j = 0; j &lt; 4; j++)
            {
                shot = instance_create(x, y, obj_spread_sonii);
                shot.direction = i * anglePerShot;
                shot.speed = 6 + (j * 0.5);
            }
        }
    }
    else
    {
        bounce = 0;
        speed = 20;
        if (instance_exists(obj_yuutoboss))
        {
            direction = point_direction(x, y, obj_yuutoboss.x, obj_yuutoboss.y);
        }
        alarm[0] = 5;
    }
}

if (astral == 1)
{
    x = previousX;
    y = previousY;
    astral = 0;
    alarm[7] = -1;
    audio_play_sound_on (global.effectsEmitter, snd_ricebullet, false, 10); 
    for (i = 0; i &lt; 360; i += 20)
    {
        shot = instance_create(x, y, obj_chizuruspreadbullet);
        shot.direction = i;
        shot.speed = 7;
    }
    
    
    if (instance_exists(obj_yuutoassist) &amp;&amp; astral == 0)
    {
        speed = 10;
        direction = point_direction(x, y, obj_yuutoassist.x, obj_yuutoassist.y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
