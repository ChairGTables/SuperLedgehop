<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_billwalk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.shineget = 1;

//Set health for enemy
hp = 200;

safeX = 0;
safeY = 0;

equip = "spread";

global.bossone = 434;
global.bosstwo = 434;
global.bossthree = 200;
global.bossvirgin = 0;
hpIndex = 3;

//set health drops
minDrops = 3;
maxDrops = 5;

//set animation speed
image_speed = 0.3;

//You must define the hurt sprite as a string
hurtSprite = "spr_billhurt";

//Do not touch this
sS = sprite_index;
hS = asset_get_index(hurtSprite);

//Set hurt sounds
hurtSoundOne = snd_billhurt1;
hurtSoundTwo = snd_billhurt2;
deathSound = snd_death5;


//Define the knockback and hitstun
bulletKnockback = 5;
shineKnockback = 7;
hitstunTime = 13;

//Define the beat that sets the alarm events to occur
shootBeat = global.eighthSec / 4;    // whole note
moveBeat = global.quarterSec; // half note

shootRestBeat = global.wholeSec * 4;

currentAngle = -10;

//Use these to shoot x amount of times before the enemy shoots again
shotCount = 0;
shotsBeforeRest = 30;
shootRestTime = 0;
action = 1;

//Boss values
phase = 0;
warn[0] = instance_create(-300, -300, obj_warnbox);
warn[1] = instance_create(-300, -300, obj_warnbox);
warn[2] = instance_create(-300, -300, obj_warnbox);
warn[3] = instance_create(-300, -300, obj_warnbox);
alarm[1] = 2;
startX = x;
startY = y;

for (i = 0; i &lt; 360; i++)
{
    directionHold[i] = 0;
}
 

//Do not touch these
upmomentum = 0;
rightmomentum = 0;
leftmomentum = 0;
downmomentum = 0;

//Begin the alarms based on the beats
//alarm[0] = shootBeat;
shootTimer = shootBeat;
//alarm[1] = moveBeat;
moveTimer = moveBeat;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Do not touch
if (sprite_index == hS)
{
    sprite_index = sS;
}
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_enemymoveback);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//////////////////////////
// Core-functionalities
// Do not touch these
// Scroll all the way down for changeable features
/////////////////////////



script_execute(scr_enemycorestep);



////////////////////////////
//Add additional step features here
////////////////////////////

//Spin animation for spinning enemies (comment this out if non-spinner)
//image_angle += 5;


shootTimer -= delta_time / 1000000;
moveTimer  -= delta_time / 1000000;
shootRestTime -= delta_time/100000;
        
if (global.bosstwo &gt; 0 &amp;&amp; global.bossthree &gt; 0 &amp;&amp; global.bossone &gt; 0)
{
    global.bossthree = hp;
}

if (global.bosstwo &gt; 0 &amp;&amp; global.bossthree &lt; 1 &amp;&amp; global.bossone &gt; 0)
{
    if(hpIndex == 3)
    {
        hp = global.bosstwo;
        hpIndex = 2;
    }
    global.bosstwo = hp;
}

if (global.bosstwo &lt; 1 &amp;&amp; global.bossthree &lt; 1 &amp;&amp; global.bossone &gt; 0)
{
    if(hpIndex == 2)
    {
        hp = global.bossone;
        hpIndex = 1;
    }
    global.bossone = hp;
}


script_execute(scr_resyncenemies_david);

if (global.resyncing)
{
    shootRestTime = global.currentWholeSec * 4;
}

if (shotCount == 501 || shotCount == 305 || shotCount == 306)
{
    for (i = 0; i &lt; 3; i++)
    {
        bullet = instance_create(x, y, obj_enemyenhancedbullet);
        bullet.direction = random_range(1, 359);
        bullet.targetDirection = random_range(1, 359);
        bullet.targetSpeed = random_range(5,8);
        bullet.speed = 1;
        
    }
    audio_play_sound_on (global.effectsEmitter, snd_enemysmall, false, 10);
}

if (shootTimer &lt;= 0)
{
    //done only if shootresttime &lt;= 0
    
    if( shootRestTime &lt;= 0 )
    {
    // ======== SHOOTING ====================
    //Reset timer
    shootTimer = shootBeat;
    
    //Perform shooting
        if (1 == 1)
        {
            
            if (phase &lt; 3)
            {
                if (shotCount == 0)
                {
                    sprite_index = spr_billshoot;
                    image_index = 0;
                    image_speed = 0.5;
                    audio_play_sound_on (global.effectsEmitter, snd_ricebullet, false, 10); 
                    audio_play_sound_on (global.voiceEmitter, snd_billlawbreaker, false, 10); 
                    
                    breaker = instance_create(x, y, obj_lawbreaker);
                    if (instance_exists(obj_chizuru))
                    {
                        breaker.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) - 20;
                    }
                    breaker.speed = 13;
                    breaker.shootBeat = global.quarterSec;
                    
                    breaker2 = instance_create(x, y, obj_lawbreaker);
                    if (instance_exists(obj_chizuru))
                    {
                        breaker2.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + 20;
                    }
                    breaker2.speed = 13;
                    
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    shotCount += 1;
                }
                else if (shotCount == 1)
                {
                    shootBeat = global.wholeSec;
                    shootTimer = shootBeat;
                    shotCount = 0;
                    phase += 1;
                }
                
            }
            else
            {
                if (shotCount == 0)
                {
                    shootBeat = global.halfSec;
                    shootTimer = shootBeat;
                    
                    randomChoice = random_range(0, 100);
                    if (randomChoice &gt; 67)
                    {
                        audio_play_sound_on (global.voiceEmitter, snd_billcrimestopper, false, 10); 
                    }
                    else if (randomChoice &lt; 33)
                    {
                        audio_play_sound_on (global.voiceEmitter, snd_billveto, false, 10); 
                        shootBeat = global.eighthSec;
                        shootTimer = shootBeat;
                    }    
                    else
                    {
                        audio_play_sound_on (global.voiceEmitter, snd_billiamthelaw, false, 10); 
                    }    
                    
                    
                    shotCount = 50;
                }
            
                else if (shotCount == 50)
                {
                    if (randomChoice &gt; 67)
                    {
                        audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                        
                        for (i = 0; i &lt; 2; i++)
                        {
                            if (instance_exists(obj_chizuru))
                            {
                                randomX = obj_chizuru.x + random_range(-156, 156);
                                randomY = obj_chizuru.y + random_range(-156, 156);
                            }
                            warnH = instance_create(0, randomY, obj_warnbox);
                            warnH.image_xscale = 100;
                            warnH.alarm[0] = -1;
                            warnH.fading = 1;
                            
                            warnV = instance_create(randomX, 0, obj_warnbox);
                            warnV.image_yscale = 100;
                            warnV.alarm[0] = -1;
                            warnV.fading = 1;
                            
                            bomb = instance_create(randomX + 16, randomY + 16 - 700, obj_billbomb);
                            bomb.areaX = randomX + 16;
                            bomb.areaY = randomY + 16;
                        }
                        
                        shotCount = 400;
                        shootBeat = global.halfSec + global.quarterSec;
                        shootTimer = shootBeat;
                    }
                    else if (randomChoice &lt; 33)
                    {
                        shotCount = 299;
                        shootBeat = global.quarterSec;
                        shootTimer = shootBeat;
                        
                        audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                        
                        for (i = 0; i &lt; 5; i++)
                        {
                            
                            if (instance_exists(obj_chizuru))
                            {
                                randomHold = random_range(-45, 45);
                                if (i == 4)
                                {
                                    randomHold = 0;
                                }
                                directionHold[i] = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + randomHold;
                                
                            }
                            warning = instance_create(x, y, obj_warninglaser_sonii);
                            warning.image_angle = directionHold[i];
                        }
                    }
                    else
                    {
                        shotCount = 500;
                        sprite_index = spr_billshoot;
                        image_index = 0;
                        image_speed = 0.3;
                        
                        audio_play_sound_on (global.effectsEmitter, snd_ricebullet, false, 10); 
                        
                        if (random_range(0, 100) &gt; 50)
                        {
                            ball = instance_create(x, y, obj_billball);
                            if (instance_exists(obj_chizuru))
                            {
                                ball.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + 20;
                            }
                            ball.speed = 3;
                            
                            
                            ball2 = instance_create(x, y, obj_billball);
                            if (instance_exists(obj_chizuru))
                            {
                                ball2.direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) - 20;
                            }
                            ball2.speed = 3;
                            ball2.spin = -1;
                        }
                        else
                        {
                            ball = instance_create(x, y, obj_billball);
                            if (instance_exists(obj_chizuru))
                            {
                                direction = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + 20;
                            }
                            ball.speed = 3;
                            ball.following = 1;
                        }
                        shootBeat = global.quarterSec;
                        shootTimer = shootBeat;
                    }
                }
                else if (shotCount == 99)
                {
                    shotCount = 100;
                    audio_play_sound_on (global.voiceEmitter, snd_defaultya2, false, 10); 
                    audio_play_sound_on (global.effectsEmitter, snd_defaultdash, false, 10); 
                    direction = point_direction(x, y, warn[0].x, warn[0].y);
                    speed = 20;
                    shootBeat = global.wholeSec * 2;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 299)
                {
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                        
                    for (i = 0; i &lt; 5; i++)
                    {
                        warning = instance_create(x, y, obj_warninglaser_sonii);
                        warning.image_angle = directionHold[i];
                    }
                }
                else if (shotCount == 300 || shotCount == 302 || shotCount == 304)
                {
                    audio_play_sound_on (global.effectsEmitter, snd_waveblast, false, 10); 
                    sprite_index = spr_billshoot;
                    image_index = 0;
                    image_speed = 0.3;
                    for (i = 0; i &lt; 5; i++)
                    {
                        beam = instance_create(x, y, obj_laser_sonii);
                        beam.image_angle = directionHold[i];
                    }
                    
                    if (shotCount == 304)
                    {
                        shotCount += 1;
                        //phase = 0;
                        shootBeat = global.wholeSec;
                        shootTimer = shootBeat;
                    }
                    else
                    {
                        shotCount += 1;
                        shootBeat = global.quarterSec;
                        shootTimer = shootBeat;
                    }
                }
                else if (shotCount == 305)
                {
                    shotCount += 1;
                    //phase = 0;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 306)
                {
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                    audio_play_sound_on (global.voiceEmitter, snd_billcity, false, 10);     
                    for (i = 0; i &lt; 360; i += 25)
                    {
                        randomHold = random_range(-10, 10);
                        directionHold[i] = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + i + randomHold;
                        warning = instance_create(x, y, obj_warninglaser_sonii);
                        warning.image_angle = directionHold[i];
                    }
                }
                else if (shotCount == 307)
                {
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                        
                    for (i = 0; i &lt; 360; i += 25)
                    {
                        warning = instance_create(x, y, obj_warninglaser_sonii);
                        warning.image_angle = directionHold[i];
                    }
                }
                else if (shotCount == 308)
                {   
                    shotCount += 1;
                    shootBeat = global.wholeSec;
                    shootTimer = shootBeat;
                    audio_play_sound_on (global.effectsEmitter, snd_waveblast, false, 10); 
                    audio_play_sound_on (global.voiceEmitter, snd_billdie, false, 10); 
                    for (i = 0; i &lt; 360; i += 25)
                    {
                        thisBeam = instance_create(x, y, obj_laser_sonii);
                        thisBeam.targetRotator = 0.8;
                        thisBeam.alarm[1] = 40;
                        thisBeam.fading = 0;
                        thisBeam.image_angle = directionHold[i];
                    }
                }
                else if (shotCount == 309)
                {
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 310)
                {
                    shotCount = 0;
                    phase = 0;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 301 || shotCount == 303)
                {
                    shotCount += 1;
                    shootBeat = global.quarterSec;
                    shootTimer = shootBeat;
                    audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                        
                    for (i = 0; i &lt; 5; i++)
                    {
                        randomHold = random_range(-45, 45);
                        if (i == 4)
                        {
                            randomHold = 0;
                        }
                        directionHold[i] = point_direction(x, y, obj_chizuru.x, obj_chizuru.y) + randomHold;
                        warning = instance_create(x, y, obj_warninglaser_sonii);
                        warning.image_angle = directionHold[i];
                    }
                }
                else if (shotCount == 400 || shotCount == 401 || shotCount == 402)
                {
                    audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10); 
                        
                    for (i = 0; i &lt; 2; i++)
                    {
                        if (instance_exists(obj_chizuru))
                        {
                            randomX = obj_chizuru.x + random_range(-156, 156);
                            randomY = obj_chizuru.y + random_range(-156, 156);
                        }
                        warnH = instance_create(0, randomY, obj_warnbox);
                        warnH.image_xscale = 100;
                        warnH.alarm[0] = -1;
                        warnH.fading = 1;
                            
                            
                        warnV = instance_create(randomX, 0, obj_warnbox);
                        warnV.image_yscale = 100;
                        warnV.alarm[0] = -1;
                        warnV.fading = 1;
                            
                        bomb = instance_create(randomX + 16, randomY + 16 - 700, obj_billbomb);
                        bomb.areaX = randomX + 16;
                        bomb.areaY = randomY + 16;
                    }
                        
                    if (shotCount == 402)
                    {
                        shotCount = 0;
                        phase = 0;
                        shootBeat = global.wholeSec;
                        shootTimer = shootBeat;
                    }
                    else
                    {
                        shotCount += 1;
                        shootBeat = global.halfSec + global.quarterSec;
                        shootTimer = shootBeat;
                    }
                    
                }
                else if (shotCount == 500)
                {
                    shotCount += 1;
                    shootBeat = global.wholeSec + global.halfSec;
                    shootTimer = shootBeat;
                }
                else if (shotCount == 501)
                {
                    shotCount = 0;
                    phase = 0;
                    shootBeat = global.wholeSec + global.halfSec;
                    shootTimer = shootBeat;
                }
            }
        }
    
        
    
    }
    
}
// ======================================================

if (moveTimer &lt;= 0)
{
    // ++++++++++++++ MOVING ++++++++++++++++++++++++++++
    //Always set the timer again so it loops
    moveTimer = moveBeat;
    
    //Action is checked on the step state to see if enemy is hurt or enemy is offscreen
    if(action == 1 &amp;&amp; (shotCount == 200 || shotCount == 0))
    {
        //Touch these to modify movement
        followspeed = 7;
        minimumspeed = 6;
        maximumspeed = 9;
        
        //Do not touch these
        if (random_range(0, 100) &gt; 50 &amp;&amp; instance_exists(obj_chizuru))
        {
            move_towards_point(obj_chizuru.x, obj_chizuru.y, followspeed);
        }
        else
        {
            hspeed = random_range(minimumspeed, maximumspeed);
            vspeed = random_range(minimumspeed, maximumspeed);
            if (random_range(0, 100) &gt; 50)
            {
                hspeed = -hspeed;
            }
            if (random_range(0, 100) &gt; 50)
            {
                vspeed = -vspeed;
            }
        }
    }
}

script_execute(scr_truespeedwallcheck);
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++


/////////////////////////////
//Death
/////////////////////////
/////////////////////////////
//Death
/////////////////////////
if (hp &lt; 1 &amp;&amp; global.bossone &lt; 1 &amp;&amp; global.bosstwo &lt; 1 &amp;&amp; global.bossthree &lt; 1)
{
    script_execute(scr_stopmusic);
    audio_play_sound_on (global.voiceEmitter, snd_billdeath, false, 10); 
    death = instance_create(x, y, obj_bossdeath);
    death.sprite_index = spr_billhurt;
    death.alarm[4] = 60;
    instance_destroy(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_defaultdetonator">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.phase == 4 &amp;&amp; shotCount == 200)
{
    shotCount = 0;
    phase = 0;
    shootBeat = global.quarterSec;
    shootTimer = shootBeat;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 103)
{
    if (instance_exists(obj_warnbox))
    {
        instance_destroy(obj_warnbox);
    }
    x = startX;
    y = startY;
    shotCount = 0;
    phase = 0;
    shootBeat = global.wholeSec * 2;
    shootTimer = shootBeat;
    audio_play_sound_on (global.effectsEmitter, snd_defaultdash, false, 10); 
}


//Do not touch!
myNum = 7;

if (vspeed &lt; 0)
{
    y += myNum;
}
if (vspeed &gt; 0)
{
    y -=  myNum;
}
if (hspeed &lt; 0)
{
    x += myNum;
}
if (hspeed &gt; 0)
{
    x -= myNum;
}


if (upmomentum &gt; 0)
{
    y += myNum;
}
if (downmomentum &gt; 0)
{
    y -= myNum;
}
if (leftmomentum &gt; 0)
{
    x += myNum;
}
if (rightmomentum &gt; 0)
{
    x -= myNum;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shine">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.hitbox == 1)
{
    script_execute(scr_enemydamage);
    script_execute(scr_enemyshined);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruflame">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 1 || shotCount == 2 || (shotCount &gt; 99 &amp;&amp; shotCount &lt; 150) || (shotCount &gt;= 30 &amp;&amp; shotCount &lt; 315))
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruicebullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 1 || shotCount == 2 || (shotCount &gt; 99 &amp;&amp; shotCount &lt; 150) || (shotCount &gt;= 30 &amp;&amp; shotCount &lt; 315))
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruspreadbullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 1 || shotCount == 2 || (shotCount &gt; 99 &amp;&amp; shotCount &lt; 150) || (shotCount &gt;= 30 &amp;&amp; shotCount &lt; 315))
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizururapidbullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 1 || shotCount == 2 || (shotCount &gt; 99 &amp;&amp; shotCount &lt; 150) || (shotCount &gt;= 30 &amp;&amp; shotCount &lt; 315))
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizuruenhancedbullet">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Apply this script for any bullet that can hurt this object</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 1 || shotCount == 2 || (shotCount &gt; 99 &amp;&amp; shotCount &lt; 150) || (shotCount &gt;= 30 &amp;&amp; shotCount &lt; 315))
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chizurubasicbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shotCount == 1 || shotCount == 2 || (shotCount &gt; 99 &amp;&amp; shotCount &lt; 150) || (shotCount &gt;= 30 &amp;&amp; shotCount &lt; 315))
{
    other.timed = 0;
}
script_execute(scr_enemydamage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_billshoot)
{
    sprite_index = spr_billwalk;
    image_speed = 0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
