<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_titlelogo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_stopmusic);



if gamepad_is_connected(0) gamepad_set_axis_deadzone(0, 0.05);
go = 0;
joy_z = false;
joy_x = false;
joy_c = false;
joy_a = false;
joy_s = false;
joy_rt = false;
joy_rb = false;
joy_lt = false;
joy_lb = false;
joy_right = false;
joy_left = false;
joy_down = false;
joy_up = false;
joy_select = false;

leftClick = false;
spinning = false;
dpad = 0;
index = 0;

        keyboard_key_release(ord('Z'));
        keyboard_key_release(ord('X'));
        keyboard_key_release(ord('C'));
        keyboard_key_release(ord('A'));
        keyboard_key_release(vk_escape);
        keyboard_key_release(ord('P'));
        keyboard_key_release(vk_up);
        keyboard_key_release(vk_down);
        keyboard_key_release(vk_right);
        keyboard_key_release(vk_left);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_testtrack_david</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_chillevent</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_hypeevent</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_coolevent</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_bosstheme</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_interpolation(false);

instance_create(x, y, obj_blackfadein);

global.isGamepad = true;

global.titleSelection = 0;
global.titleState = 0;

global.isCutscene = false;
global.stageState = 0;


global.remaining = 0;
global.destroyed = 0;
global.secondsPassed = 0;
global.shineget = 1;
global.bossvirgin = 1;



global.lowhp = 0;

global.specialsuccess = 0;
global.specialattempts = 0;

global.chizurumovex = 0;
global.chizurumovey = 0;

global.chizuruaimx = 0;
global.chizuruaimy = 0;

global.aimangle = 0;
global.shottype = 0;
global.maxshottype = 5;

global.assisthp = 99;

global.chizuruhp = 99;
global.chizurump = 99;
global.chizurushine = 99;
global.chizurushotcooldown = 0;
global.chizurushinecharge = 0;
global.chizurupoptime = 60;
global.invincibility = 0;
global.absorbing = 0;
global.shineready = 1;
global.specialready = 1;

global.basiccount = 100;
global.enhancedcount = 0;
global.rapidcount = 0;
global.spreadcount = 0;
global.firecount = 0;
global.icecount = 0;

global.rapidvirgin = 1;

global.combo = 0;

global.bossone = 434;
global.bosstwo = 434;
global.bossthree = 434;




//Key unlockables
for (i = 0; i &lt; 100; i++)
{
    global.keyID[i] = 0;
}
global.keyIndex = 0;

//Stage indicators
for (i = 0; i &lt; 5; i++)
{
    global.stageIndicator[i] = 0;
}

//Dialogue variables
global.message = "";
global.chr1 = 0;
global.messageNumber = 0;
global.text = " ";
global.speaking = false;

for (i = 0; i &lt; 100; i++)
{
    global.messageArray[i] = " ";
}
for (i = 0; i &lt; 100; i++)
{
    global.emotionProtagonistArray[i] = "neutral";
    global.emotionAntagonistArray[i] = "neutral";
}
for (i = 0; i &lt; 100; i++)
{
    global.voiceArray[i] = snd_gatling;
}
for (i = 0; i &lt; 100; i++)
{
    global.categoryArray[i] = "left";
}
global.messageLimit = 0;

//////////////////////////
//Rhythm components
////////////////////////////
/*
// Initial variables
global.bpm = 120;
global.bpmToSec = global.bpm / 60;

// Resync variables
global.currentWholeSec = 0;
global.currentHalfSec = 0;
global.currentQuarterSec = 0;
global.currentEighthSec = 0;

// Variables for objects to use (when not resyncing)
global.wholeSec = global.bpmToSec;
global.halfSec = global.bpmToSec / 2;
global.quarterSec = global.bpmToSec / 4;
global.eighthSec = global.bpmToSec / 8;

global.chizuruShootBeat = global.quarterSec;
global.chizuruShootTimer = global.chizuruShootBeat;
global.chizuruMoveBeat = global.quarterSec;
global.chizuruMoveTimer = global.chizuruMoveBeat;
global.chizuruShootRest = 0;

// Resync toggle
global.resyncing = false; // When true all objects will resync
*/



// Initial variables
global.bpm = 0;
global.bpmToSec = 0;

// Player Beats
global.playerQuarter = (60000 / global.bpm) / 1000;


// Resync variables
global.currentWholeSec = 0;
global.currentHalfSec = 0;
global.currentQuarterSec = 0;
global.currentEighthSec = 0;

// Variables for objects to use (when not resyncing)
global.wholeSec = 0;
global.halfSec = 0;
global.quarterSec = 0;
global.eighthSec = 0;

global.chizuruShootBeat = 0;
global.chizuruShootTimer = 0;
global.chizuruMoveBeat = 0;
global.chizuruMoveTimer = 0;
global.chizuruShootRest = 0;

// Resync toggle
global.resyncing = false; // When true all objects will resync




//Wave
t = 0;
increment = 6; //degrees -- freq = 1 oscillation per second (1Hz) in a 30 fps room
amplitude = 10; //pixels of peak oscillation
 
//clone the y-position (or use x instead if you're doing horizontal oscillation)
yy = y;




//music
global.musicrm1 = audio_play_sound_on(global.musicEmitter, snd_titlemusic, true, 0);


//misc
global.shmupPosition = 480;
for (i = 0; i &lt; 5; i++)
{
    global.xHolder[i] = 0;
    global.yHolder[i] = 0;
}

randThing = random_range(0,200);

if (randThing &lt; 75)
{
    audio_play_sound_on(global.voiceEmitter, snd_superledgehopone, false, 0);
}
else if (randThing &gt; 74 &amp;&amp; randThing &lt; 125)
{
    audio_play_sound_on(global.voiceEmitter, snd_superledgehopone, false, 0);
}
else
{
    audio_play_sound_on(global.voiceEmitter, snd_superledgehoptwo, false, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/////////////////////////MOVEMENT////////////////////////////

display_mouse_unlock();

if (global.titleState == 1)
{
    visible = 0;
}
else
{
    visible = 1;
}

/*if (global.stageState == 1)
{
    visible = 0;
}
else
{
    visible = 1;
}*/

if (gamepad_axis_value(0, gp_axislh) &gt; 0.02 || gamepad_axis_value(0, gp_axislh) &lt; -0.02) 
{
    global.isGamepad = true;
}

if (global.isGamepad == true)
{

    if (gamepad_axis_value(0, gp_axislh) &lt; 0.1 &amp;&amp; gamepad_axis_value(0, gp_axislh) &gt; -0.1 &amp;&amp; dpad = 0)
    {
        global.chizurumovex = 0;
        go = 0;
        /*
        if (joy_right = true)
        {
            joy_right = false;
            keyboard_key_release(vk_right);
        }    
        if (joy_left = true)
        {
            joy_left = false;
            keyboard_key_release(vk_left);
        }
        */
    }   
    else
    {
        if gamepad_axis_value(0, gp_axislh) &gt; 0.8
        {
            global.chizurumovex = gamepad_axis_value(0, gp_axislh);
            global.isGamepad = true;
            
            if (go == 0 )
            {
                go = 1;
                global.titleSelection += 1;
            }
            /*
            if (joy_right = false)
            {
                joy_right = true;
                keyboard_key_press(vk_right);
            }  
            if (joy_left = true)
            {
                joy_left = false;
                keyboard_key_release(vk_left);
            }    
            */
        }
        
        if gamepad_axis_value(0, gp_axislh) &lt; -0.8
        {
            global.chizurumovex = gamepad_axis_value(0, gp_axislh);
            global.isGamepad = true;
            
            if (go == 0)
            {
                go = 1;
                global.titleSelection -= 1;
            }
            /*
            if (joy_left = false)
            {
                joy_left = true;
                keyboard_key_press(vk_left);
            }    
            if (joy_right = true)
            {
                joy_right = false;
                keyboard_key_release(vk_right);
            } 
            */
        }
    } 
        
    if (gamepad_axis_value(0, gp_axislv) &lt; 0.1 &amp;&amp; gamepad_axis_value(0, gp_axislv) &gt; -0.1 &amp;&amp; dpad = 0)
    {
        global.chizurumovey = 0;
        /*
        if (joy_up = true)
        {
            joy_up = false;
            keyboard_key_release(vk_up);
        }    
        if (joy_down = true)
        {
            joy_down = false;
            keyboard_key_release(vk_down);
        }
        */
    }
    
    if gamepad_axis_value(0, gp_axislv) &lt; -0.1
    {
        global.chizurumovey = gamepad_axis_value(0, gp_axislv);
        global.isGamepad = true;
        /*
        if (joy_up = false)
        {
            joy_up = true;
            keyboard_key_press(vk_up);
        }    
        if (joy_down = true)
        {
            joy_down = false;
            keyboard_key_release(vk_down);
        }
        */
    }
    
    if gamepad_axis_value(0, gp_axislv) &gt; 0.1
    {
        global.chizurumovey = gamepad_axis_value(0, gp_axislv);
        global.isGamepad = true;
        /*
        if (joy_down = false)
        {
            joy_down = true;
            keyboard_key_press(vk_down);
        }    
        if (joy_up = true)
        {
            joy_up = false;
            keyboard_key_release(vk_up);
        }    
        */
    }



}




if (global.titleSelection &gt; 3 &amp;&amp; global.titleState == 0)
{
    global.titleSelection = 0;
}
if (global.titleSelection &lt; 0 &amp;&amp; global.titleState == 0)
{
    global.titleSelection = 3;
}
      
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t = (t + increment) mod 360;
shift = amplitude * dsin(t);
 
//clone the movement from the object's speed and direction
yy += vspeed;
y = yy + shift; //vertical wave motion
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.titleSelection</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.titleState == 0 &amp;&amp; global.titleSelection == 0)
{
    audio_stop_sound(snd_titlemusic);
    
    randThing = random_range(0,200);
    
    if (randThing &lt; 75)
    {
        audio_play_sound_on(global.voiceEmitter, snd_iwillcheeseyouup, false, 0);
    }
    else if (randThing &gt; 74 &amp;&amp; randThing &lt; 125)
    {
        audio_play_sound_on(global.voiceEmitter, snd_cheeseitup, false, 0);
    }
    else
    {
        audio_play_sound_on(global.voiceEmitter, snd_imgoingallin, false, 0);
    }
    
    
    if (instance_exists(obj_titlecamera))
    {
        obj_titlecamera.action = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.titleSelection</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.titleState == 0 &amp;&amp; global.titleSelection == 0)
{
    audio_stop_sound(snd_titlemusic);
    
    randThing = random_range(0,200);
    
    if (randThing &lt; 75)
    {
        audio_play_sound_on(global.voiceEmitter, snd_iwillcheeseyouup, false, 0);
    }
    else if (randThing &gt; 74 &amp;&amp; randThing &lt; 125)
    {
        audio_play_sound_on(global.voiceEmitter, snd_cheeseitup, false, 0);
    }
    else
    {
        audio_play_sound_on(global.voiceEmitter, snd_imgoingallin, false, 0);
    }
    
    
    if (instance_exists(obj_titlecamera))
    {
        obj_titlecamera.action = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
