<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_titlelogo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.chizurumovex = 0;
global.chizurumovey = 0;

global.chizuruaimx = 0;
global.chizuruaimy = 0;

global.aimangle = 0;
global.shottype = 0;
global.maxshottype = 5;

global.chizuruhp = 100;
global.chizurump = 100;
global.chizurushine = 100;
global.chizurushotcooldown = 0;
global.chizurushinecharge = 0;
global.chizurupoptime = 60;
global.invincibility = 0;

global.basiccount = 100;
global.enhancedcount = 100;
global.rapidcount = 100;
global.spreadcount = 100;
global.firecount = 100;
global.icecount = 100;

global.combo = 0;

//////////////////////////
//Rhythm components
////////////////////////////
// Initial variables
global.bpm = 120;
global.bpmToSec = global.bpm / 60;

// Resync variables
global.currentWholeSec = 0;
global.currentHalfSec = 0;
global.currentQuarterSec = 0;
global.currentEighthSec = 0;

// Variables for objects to use (when not resyncing)
global.wholeSec = global.bpmToSec;
global.halfSec = global.bpmToSec / 2;
global.quarterSec = global.bpmToSec / 4;
global.eighthSec = global.bpmToSec / 8;

global.chizuruShootBeat = global.quarterSec;
global.chizuruShootTimer = global.chizuruShootBeat;
global.chizuruMoveBeat = global.quarterSec;
global.chizuruMoveTimer = global.chizuruMoveBeat;
global.chizuruShootRest = 0;

// Resync toggle
global.resyncing = false; // When true all objects will resync

//////////////////////////
//Sound emitters
////////////////////////////
// Volumes
global.masterVolume  = 1;
global.musicVolume   = 1;
global.effectsVolume = 1;
global.voiceVolume   = 1;

// Sound emitters
global.musicEmitter   = audio_emitter_create();
global.effectsEmitter = audio_emitter_create();
global.voiceEmitter   = audio_emitter_create();

// Set volumes of emitters
audio_master_gain (global.masterVolume);
audio_emitter_gain(global.musicEmitter,   global.musicVolume);
audio_emitter_gain(global.effectsEmitter, global.effectsVolume);
audio_emitter_gain(global.voiceEmitter, global.voiceVolume);


//Wave
t = 0;
increment = 6; //degrees -- freq = 1 oscillation per second (1Hz) in a 30 fps room
amplitude = 10; //pixels of peak oscillation
 
//clone the y-position (or use x instead if you're doing horizontal oscillation)
yy = y;




//music
audio_play_sound_on(global.musicEmitter, snd_titlemusic, true, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t = (t + increment) mod 360;
shift = amplitude * dsin(t);
 
//clone the movement from the object's speed and direction
yy += vspeed;
y = yy + shift; //vertical wave motion
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_titlemusic);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
