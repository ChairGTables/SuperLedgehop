<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyenhancedbullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friendly  = 0;
absorbed = 0;

damage = 5;
knockbackspeed = 5;
destroyable = 1;

upmomentum = 0;
leftmomentum = 0;
rightmomentum = 0;
downmomentum = 0;

image_angle = direction;

hp = 40;

//set animation speed
image_speed = 0.2;

//You must define the hurt sprite as a string
hurtSprite = "spr_oldbasicenemyhurt";

//Do not touch this
sS = sprite_index;
hS = asset_get_index(hurtSprite);

//Define the knockback and hitstun
bulletKnockback = 5;
shineKnockback = 7;
hitstunTime = 13;

//Define the beat that sets the alarm events to occur
shootBeat = global.bpmToSec;    // whole note
moveBeat = global.bpmToSec / 2; // half note

//Use these to shoot x amount of times before the enemy shoots again
shotCount = 0;
shotsBeforeRest = 3;
shootRestTime = 150;
action = 1;

//Do not touch these
upmomentum = 0;
rightmomentum = 0;
leftmomentum = 0;
downmomentum = 0;

//Begin the alarms based on the beats
//alarm[0] = shootBeat;
shootTimer = shootBeat;
//alarm[1] = moveBeat;
moveTimer = moveBeat;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_absorbparticle);
instance_destroy(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//////////////////////////
// Core-functionalities
// Do not touch these
// Scroll all the way down for changeable features
/////////////////////////


//Spin animation for spinning enemies (comment this out if non-spinner)
image_angle = direction;



////////////////////////////
//Add additional step features here
////////////////////////////

shootTimer -= delta_time / 1000000;
moveTimer  -= delta_time / 1000000;

if (shootTimer &lt;= 0)
{
    // ======== SHOOTING ====================
    //Reset timer
    shootTimer = 9999999999999999;
    
    
    //Perform shooting
    if (action == 1)
    {
        if (instance_exists(obj_chizuru))
        {
            move_towards_point(obj_chizuru.x, obj_chizuru.y, 10);
        }
    }
    
    // Beat indicator
    var beatIndicator = instance_create(x, y, obj_beatindicator_david);
    beatIndicator.image_speed = shootBeat;
}
// ======================================================

if (moveTimer &lt;= 0)
{
    // ++++++++++++++ MOVING ++++++++++++++++++++++++++++
    //Always set the timer again so it loops
    moveTimer = 99999999;
    
    //Action is checked on the step state to see if enemy is hurt or enemy is offscreen
    hspeed = 0;
    vspeed = 0;
}
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++


/////////////////////////////
//Death
/////////////////////////
if (hp &lt; 1)
{
    instance_create(x, y, obj_explosion);
    instance_destroy(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_smolhitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.invincibility == 0 &amp;&amp; absorbed == 0 &amp;&amp; instance_exists(obj_chizuru))
{
    script_execute(scr_chizurudamage);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_absorbbubble">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (absorbed == 0)
{
    absorbed = 1;
    friendly = 1;
    
    alarm[0] = global.chizurupoptime;
    audio_play_sound (snd_absorb, 10, false); 
    instance_create(x, y, obj_absorbbubble);
        
    vspeed = 0;
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shine">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.absorb == 1 &amp;&amp; absorbed == 0)
{
    absorbed = 1;
    friendly = 1;
    
    alarm[0] = global.chizurupoptime;

    audio_play_sound (snd_absorb, 10, false); 
    instance_create(x, y, obj_absorbbubble);
        
    vspeed = 0;
    hspeed = 0;
}

if (other.absorb == 0 &amp;&amp; friendly == 0 &amp;&amp; absorbed == 0)
{
    friendly = 1;
    audio_play_sound (snd_reflect, 10, false); 
    var darkside = instance_create(x, y, obj_chizuruenhancedbullet);
    darkside.direction = direction + 180;
    darkside.speed = speed * 3;
    darkside.sprite_index = sprite_index;
    
    instance_destroy(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
