<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_louiedisc</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fading = 0;
shotCount = 0;

if (instance_exists(obj_chizuru))
{
    image_angle = point_direction(x, y, obj_chizuru.x, obj_chizuru.y);
}

//Set the alarm based on the given beat
shootBeat = global.quarterSec;    // whole note
shootTimer = shootBeat;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shootTimer  -= delta_time / 1000000;


if (shootTimer &lt;= 0)
{
    shootTimer = shootBeat;
    
    if (shotCount == 0 || shotCount == 2 || shotCount == 4)
    {
        speed = 0;
        shotCount += 1;
        if (random_range(0,100) &gt; 80 &amp;&amp; instance_exists(obj_chizuru))
        {
            image_angle = point_direction(x, y, obj_chizuru.x, obj_chizuru.y);
        }   
        image_angle += random_range(-10, 10);
     
        audio_stop_sound(snd_bombbeep);
        audio_play_sound_on (global.effectsEmitter, snd_bombbeep, false, 10);    
        warn = instance_create(x, y, obj_warninglaser_sonii);
        warn.image_angle = image_angle;
        
        shootBeat = global.quarterSec + global.eighthSec;
        shootTimer = shootBeat;
    }
    else if (shotCount == 1 || shotCount == 3 || shotCount == 5)
    {
        audio_stop_sound(snd_waveblast);
        audio_play_sound_on (global.effectsEmitter, snd_waveblast, false, 10);
        
        laser = instance_create(x, y, obj_laser_sonii);
        laser.image_angle = image_angle;
        
        shootBeat = global.quarterSec;
        shootTimer = shootBeat;
        
        if (shotCount == 5)
        {
            fading = 1;
            shotCount += 1;
        }
        else
        {
            shotCount += 1;
        }
    }
}


if (fading == 1)
{
    image_alpha -= 0.1;
}

if (image_alpha &lt; 0.1)
{
    instance_destroy(self);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
