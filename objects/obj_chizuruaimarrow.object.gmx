<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chizuruarrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (instance_exists(obj_chizuru))
{
    x = obj_chizuru.x;
    y = obj_chizuru.y;
}

if ((global.chizuruaimx == 0 &amp;&amp; global.chizuruaimy == 0) || global.isCutscene == true)
{
    image_alpha = 0;
}
else
{
    image_alpha = 0.4;
}


if (instance_exists(obj_shmupcontroller))
{
    global.chizuruaimx = 0;
    global.chizuruaimy = -1;
    global.aimangle = point_direction(0, 0, global.chizuruaimx, global.chizuruaimy);
    image_angle = 90;
}
else
{
    if (global.isGamepad == false)
    {
        global.aimangle = point_direction(x, y, mouse_x, mouse_y);
        angleMan = 0;
        if ( abs ( distance_to_point(mouse_x, y) ) &gt; abs ( distance_to_point(x, mouse_y) ) )
        {
            angleMan = abs ( distance_to_point(mouse_x, y) );
        }
        else 
        {
            angleMan = abs ( distance_to_point(x, mouse_y) );
        }
        global.chizuruaimx = distance_to_point(mouse_x, y) / angleMan;
        global.chizuruaimy = distance_to_point(x, mouse_y) / angleMan;
        
        if (mouse_x &lt; x)
        {
            global.chizuruaimx = -global.chizuruaimx;
        }
        if (mouse_y &lt; y)
        {
            global.chizuruaimy = -global.chizuruaimy;
        }
        image_angle = global.aimangle;
    }
    else
    {
        if (global.chizuruaimx != 0 &amp;&amp; global.chizuruaimx != 0)
        {
            global.aimangle = point_direction(0, 0, global.chizuruaimx, global.chizuruaimy);
        }
        else
        {
            if (global.chizurumovex != 0 &amp;&amp; global.chizurumovex != 0)
            {
                global.aimangle = point_direction(0, 0, global.chizurumovex, global.chizurumovey);
            }
        }
        image_angle = global.aimangle;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
